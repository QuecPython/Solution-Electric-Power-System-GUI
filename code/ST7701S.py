# Copyright (c) Quectel Wireless Solution, Co., Ltd.All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# !/usr/bin/env python
# -*- coding: utf-8 -*-

"""
@file      :ST7701S.py
@author    :Jack Sun (jack.sun@quectel.com)
@brief     :<description>
@version   :1.0.0
@date      :2023-11-28 09:47:53
@copyright :Copyright (c) 2023
"""

from tp import gt9xx
from machine import LCD, Pin


INIT_ST7701S = (
    0x11, 0, 0,
    0xFF, 120, 5, 0x77, 0x01, 0x00, 0x00, 0x10,
    0xC0, 0, 2, 0xE9, 0x03,
    0xC1, 0, 2, 0x11, 0x02,
    0xC2, 0, 2, 0x31, 0x08,
    0xCC, 0, 1, 0x10,
    0xB0, 0, 16, 0x00, 0x0D, 0x14, 0x0D, 0x10, 0x05, 0x02, 0x08, 0x08, 0x1E, 0x05, 0x13, 0x11, 0xA3, 0x29, 0x18,
    0xB1, 0, 16, 0x00, 0x0C, 0x14, 0x0C, 0x10, 0x05, 0x03, 0x08, 0x07, 0x20, 0x05, 0x13, 0x11, 0xA4, 0x29, 0x18,
    0xFF, 0, 5, 0x77, 0x01, 0x00, 0x00, 0x11,
    0xB0, 0, 1, 0x6C,
    0xB1, 0, 1, 0x43,
    0xB2, 0, 1, 0x07,
    0xB3, 0, 1, 0x80,
    0xB5, 0, 1, 0x47,
    0xB7, 0, 1, 0x85,
    0xB8, 0, 1, 0x20,
    0xB9, 0, 1, 0x10,
    0xC1, 0, 1, 0x78,
    0xC2, 0, 1, 0x78,
    0xD0, 0, 1, 0x88,
    0xE0, 100, 3, 0x00, 0x00, 0x02,
    0xE1, 0, 11, 0x08, 0x00, 0x0A, 0x00, 0x07, 0x00, 0x09, 0x00, 0x00, 0x33, 0x33,
    0xE2, 0, 13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xE3, 0, 4, 0x00, 0x00, 0x33, 0x33,
    0xE4, 0, 2, 0x44, 0x44,
    0xE5, 0, 16, 0x0E, 0x60, 0xA0, 0xA0, 0x10, 0x60, 0xA0, 0xA0, 0x0A, 0x60, 0xA0, 0xA0, 0x0C, 0x60, 0xA0, 0xA0,
    0xE6, 0, 4, 0x00, 0x00, 0x33, 0x33,
    0xE7, 0, 2, 0x44, 0x44,
    0xE8, 0, 16, 0x0D, 0x60, 0xA0, 0xA0, 0x0F, 0x60, 0xA0, 0xA0, 0x09, 0x60, 0xA0, 0xA0, 0x0B, 0x60, 0xA0, 0xA0,
    0xEB, 0, 7, 0x02, 0x01, 0xE4, 0xE4, 0x44, 0x00, 0x40,
    0xEC, 0, 2, 0x02, 0x01,
    0xED, 0, 16, 0xAB, 0x89, 0x76, 0x54, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x10, 0x45, 0x67, 0x98, 0xBA,
    0xFF, 0, 5, 0x77, 0x01, 0x00, 0x00, 0x00,
    0x3A, 0, 1, 0x77,
    0x36, 0, 1, 0x00,
    0x35, 0, 1, 0x00,
    0x29, 0, 0
)

LCD_WIDTH = 480

LCD_HIGHT = 854

LCD_DATALANE = 2

LCD_ENABLE_GPION = Pin.GPIO8


class ST7701S:

    def __init__(self):
        self.enable_gpio = Pin(LCD_ENABLE_GPION, Pin.OUT, Pin.PULL_DISABLE, 1)
        self.lcd = LCD()
        self.lcd.mipi_init(initbuf=bytearray(INIT_ST7701S), width=LCD_WIDTH, hight=LCD_HIGHT, DataLane=LCD_DATALANE)
        self.lcd.lcd_clear(0xFFFF)
        self.lcd.lcd_display_on()
        self.tp_gt911 = gt9xx(irq=40, reset=20)
        self.tp_gt911.activate()
        self.tp_gt911.init()
        # self.gpio40 = Pin(Pin.GPIO40, Pin.OUT, Pin.PULL_PU, 0)

    def onoff(self, val=1):
        return True if self.enable_gpio.write(val) == 0 else False

    def state(self):
        return self.enable_gpio.read()

    def show(self, filename, start_x=200, start_y=323):
        self.lcd.lcd_show(filename, start_x, start_y)

LCD_SCREEN = ST7701S()
